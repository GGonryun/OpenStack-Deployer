---
- name: 'install packages'
  yum:
    name:
      - centos-release-openstack-train
    state: present
  tags:
    - basic

- name: 'Upgrade all packages'
  yum:
    name: '*'
    state: latest
  tags:
    - basic

- name: 'install packages2'
  yum:
    name:
      - python-openstackclient
      - openstack-selinux
      - ebtables 
      - ipset
      - chrony
    state: present
  tags:
    - basic

# - name: 'install firewalld'
#   yum:
#     name:
#       - firewalld
#     state: present
#   register: firewall_update
#   tags:
#     - basic
#     - firewall

# - name: 'reload firewall'
#   systemd:
#     name: firewalld
#     state: started
#     enabled: yes
#   when: firewall_update is changed
#   tags:
#     - basic
#     - firewall

# - name: 'update firewall'
#   shell: firewall-cmd --permanent --add-service=ntp
#   when: firewall_update is changed
#   tags:
#     - basic
#     - firewall

# - name: 'reload firewall'
#   shell: firewall-cmd --reload
#   when: firewall_update is changed
#   tags:
#     - basic
#     - firewall

- name: 'copy startup template'
  template:
    backup: yes
    src: startup.sh.j2
    dest: '~/startup.sh'
    owner: root
    group: root
    mode: '0755'
  register: startup_update
  tags:
    - basic

- name: 'copy chrony template'
  template:
    backup: yes
    src: chrony.conf.j2
    dest: /etc/chrony.conf
  register: chrony_update
  tags:
    - basic

- name: 'restart chrony'
  systemd:
    name: chronyd
    state: restarted
    enabled: yes
  when: chrony_update is changed
  tags:
    - basic

- name: 'install nova'
  yum:
    name:
      - openstack-nova-compute
    state: present
  register: nova_update
  tags:
    - openstack
    - nova

- name: 'setup nova'
  block:
    - name: 'copy nova template'
      template:
        backup: yes
        src: nova.conf.j2
        dest: /etc/nova/nova.conf
    - name: 'create nova state folder'
      file:
        path: "{{ nova_state_path }}"
        state: directory
    - name: 'copy existing nova state data'
      copy:
        remote_src: yes
        src: /var/lib/nova/
        dest: "{{ nova_state_path }}"
    - name: 'add group permissions'
      shell: "chgrp -R nova {{ nova_state_path }}"
    - name: 'add owner permissions'
      shell: "chown -R nova {{ nova_state_path }}"
    - name: 'set selinux permissions'
      shell: "semanage fcontext -a -t nova_var_lib_t '{{ nova_state_path }}(/.*)?'"
    - name: 'refresh permissions'
      shell: "restorecon -vvRF {{ nova_state_path }}"
    - name: 'grep cpu info'
      shell: egrep -c '(vmx|svm)' /proc/cpuinfo
    - name: 'restart libvirt'
      systemd:
        name: libvirtd.service
        state: restarted
        enabled: yes
  when: nova_update is changed
  tags:
    - openstack
    - nova

- name: 'install neutron'
  yum:
    name:
      - openstack-neutron-linuxbridge
    state: present
  register: neutron_update
  tags:
    - openstack
    - neutron

- name: 'setup neutron'
  block:
    - name: 'copy neutron template'
      template:
        backup: yes
        src: neutron.conf.j2
        dest: /etc/neutron/neutron.conf
      
    - name: 'copy linuxbridge_agent template'
      template:
        backup: yes
        src: linuxbridge_agent.ini.j2
        dest: /etc/neutron/plugins/ml2/linuxbridge_agent.ini

    - name: 'modprobe netfilter'
      shell: modprobe br_netfilter

    - name: 'sysctl check'
      shell: sysctl -p

    - name: 'update ip tables'
      shell: sysctl net.bridge.bridge-nf-call-iptables

    - name: 'update iptables ipv6'
      shell: sysctl net.bridge.bridge-nf-call-ip6tables

    - name: 'disable selinux'
      shell: setenforce 0
  when: neutron_update is changed

- name: 'restart nova compute'
  systemd:
    name: openstack-nova-compute.service
    state: restarted
    enabled: yes
  when: (nova_update is changed) or (neutron_update is changed) 
  
- name: 'restart linuxbridge agent'
  systemd:
    name:  neutron-linuxbridge-agent.service
    state: restarted
    enabled: yes
  when: (nova_update is changed) or (neutron_update is changed)

